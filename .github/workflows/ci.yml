name: Frontend CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ feat/* ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: node-version: '16'
      - run: npm ci
      - run: npm run lint

  typecheck:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run typecheck

  unit-tests:
    needs: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run test -- --ci

  e2e-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    services:
      web:
        image: nginx:latest
        ports: ['8100:80']
        options: >-
          --entrypoint bash
          -c "cp -r www/* /usr/share/nginx/html && nginx -g 'daemon off;'"
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build
      - run: npm run e2e -- --baseUrl=http://localhost:8100

  dockerize:
    if: github.ref == 'refs/heads/master'
    needs: e2e-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: npm ci
      - run: npm run build
      - run: |
          IMAGE=123456789012.dkr.ecr.us-east-1.amazonaws.com/yap-frontend:${GITHUB_SHA::8}
          docker build -t $IMAGE -f docker/Dockerfile .
          aws ecr get-login-password | docker login --username AWS --password-stdin 123456789012.dkr.ecr.us-east-1.amazonaws.com
          docker push $IMAGE
      - run: echo "IMAGE=$IMAGE" >> $GITHUB_ENV
